#https://www.javatpoint.com/spring-boot-properties
#java -jar -Dspring.config.location = C:\application.properties demo.jar --spring.profile.active=dev

##Disable Hot Swap If Needed
spring.devtools.restart.enabled = true

app.name=service1
app.description=${app.name} is a Spring Boot application for Service discovery test.

server.port = 8083
spring.application.name = service1-service

message.application.name = ${app.name} application 

management.endpoints.web.exposure.include=*

##Service registry and discovery related entry
#eureka.instance.leaseRenewalIntervalInSeconds= 1
#eureka.instance.leaseExpirationDurationInSeconds= 2
#eureka.client.serviceUrl.defaultZone = http://127.0.0.1:8761/eureka/
#eureka.client.healthcheck.enabled= true
#eureka.client.lease.duration= 5
#spring.cloud.config.uri=http://localhost:8888

#Devtools can also be configured to only refresh the browser whenever a static resource has changed (
spring.devtools.remote.restart.enabled=false


#server.context-path = /vp
server.servlet.context-path=/service1

#Global base
security.basic.enabled=false
spring.security.user.name=vijay
spring.security.user.password=password
security.oauth2.resource.filter-order=3

## if no active profile, default is 'default'
#spring.profiles.active=prod

#Consider renaming one of the beans or enabling overriding by setting
spring.main.allow-bean-definition-overriding=true

#### Database properties {start application and use http://localhost:9090/h2} DB_CLOSE_ON_EXIT=FALSE
# Database
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.validationQuery = SELECT 1
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect



# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate 
hibernate.dialect= org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql= true
hibernate.hbm2ddl.auto= update
entitymanager.packagesToScan= com.service.app.model


spring.autoconfigure.exclude = "org.springframework.boot.autoconfigure.session.SessionAutoConfiguration"

#spring.mvc.async.request-timeout=5000ms

#We can override specific cache behaviors in Spring boot by overriding the cache provider specific settings(JCache (JSR-107) (EhCache 3, Hazelcast, Infinispan, and others))
spring.cache.infinispan.config=infinispan.xml

#Actuator Security with Properties
#management.security.enabled = true
#management.security.roles = ADMIN
#security.basic.enabled = true
#security.user.name = admin
#security.user.password = admin


##CORS support
#endpoints.cors.allowed-origins = http://example.com
#endpoints.cors.allowed-methods = GET,POST

logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.=error
logging.level.org.springframework=ERROR


############################################################3

spring.banner.charset=UTF-8
spring.banner.location=classpath:banner.txt
spring.banner.image.width=76 
spring.banner.image.height= 30
spring.banner.image.margin=2
spring.banner.image.invert=false 
